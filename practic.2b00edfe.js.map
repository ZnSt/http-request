{"mappings":"AAGA,MAAMA,EAAUC,SAASC,cAAc,UACjCC,EAASF,SAASC,cAAc,aAChCE,EAAYH,SAASC,cAAc,WAEzC,SAASG,EAAQC,EAASC,GACxB,OAAO,IAAIC,SAAQC,IACjBH,EAAQI,iBAAiBH,GAAW,KAClCE,EACE,UAAUF,qBAA6BD,EAAQK,iBAAiBL,EAAQM,aAMhF,SAASC,EAAaC,GACpBb,SAASc,KAAKC,mBACZ,YACA,iCACKF,mBAKTT,EAAQL,EAAS,SAASiB,KAAKJ,GAC/BR,EAAQF,EAAQ,SAASc,KAAKJ,GAC9BR,EAAQD,EAAW,SAASa,KAAKJ","sources":["src/js/practic.js"],"sourcesContent":["// Create a function waitFor that takes a DOM element and a string eventName, such as click. The function returns a Promise that should be resolved when eventName happened on the element with a message It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}. (For example: It was click on the element: INPUT, id: login.)\n// Also create a function printMessage that takes a string message and adds <div class=\"message\"> with the message to the DOM\n\nconst loginEl = document.querySelector('#login');\nconst passEl = document.querySelector('#password');\nconst submitBtn = document.querySelector('#submit');\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.`\n      );\n    });\n  });\n}\n\nfunction printMessage(message) {\n  document.body.insertAdjacentHTML(\n    'beforeend',\n    `<div class=\"message\">\n    <p>${message}</p>\n  </div>`\n  );\n}\n\nwaitFor(loginEl, 'click').then(printMessage);\nwaitFor(passEl, 'click').then(printMessage);\nwaitFor(submitBtn, 'click').then(printMessage);\n"],"names":["$dec9d35b8a9c4617$var$loginEl","document","querySelector","$dec9d35b8a9c4617$var$passEl","$dec9d35b8a9c4617$var$submitBtn","$dec9d35b8a9c4617$var$waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","$dec9d35b8a9c4617$var$printMessage","message","body","insertAdjacentHTML","then"],"version":3,"file":"practic.2b00edfe.js.map"}